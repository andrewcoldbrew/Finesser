Index: src/main/java/myApp/controllers/views/TransactionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package myApp.controllers.views;\r\n\r\nimport io.github.palexdev.materialfx.controls.*;\r\nimport io.github.palexdev.materialfx.controls.cell.MFXTableRowCell;\r\nimport io.github.palexdev.materialfx.filter.DoubleFilter;\r\nimport io.github.palexdev.materialfx.filter.StringFilter;\r\nimport io.github.palexdev.materialfx.utils.others.observables.When;\r\nimport javafx.application.Platform;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.collections.transformation.FilteredList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.*;\r\nimport myApp.Main;\r\nimport myApp.controllers.components.AddTransactionForm;\r\nimport myApp.controllers.components.ManualAlert;\r\nimport myApp.controllers.components.UpdateTransactionForm;\r\nimport myApp.models.Transaction;\r\nimport myApp.utils.ConnectionManager;\r\nimport myApp.utils.Draggable;\r\nimport myApp.utils.LocalDateComparator;\r\n\r\nimport java.net.URL;\r\nimport java.sql.*;\r\nimport java.time.LocalDate;\r\nimport java.util.Comparator;\r\nimport java.util.ResourceBundle;\r\n\r\n\r\npublic class TransactionController implements Initializable {\r\n    public BorderPane mainPane;\r\n    public MFXTextField searchBar;\r\n    public MFXPaginatedTableView<Transaction> transactionTable;\r\n\r\n    // Filter buttons\r\n    @FXML private Label totalFood;\r\n    @FXML private Label totalEntertainment;\r\n    @FXML private Label totalMisc;\r\n    private AddTransactionForm addForm;\r\n    private UpdateTransactionForm updateForm;\r\n\r\n    private final Draggable draggable = new Draggable();\r\n\r\n    private final ObservableList<Transaction> transactionData = FXCollections.observableArrayList();\r\n    private FilteredList<Transaction> filteredTransactions;\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n//        updateTotals();\r\n        loadTransactions();\r\n        filteredTransactions = new FilteredList<>(transactionData, p -> true);\r\n        setupTransactionTable();\r\n        setupSearchBar();\r\n        transactionTable.getSelectionModel().setAllowsMultipleSelection(false);\r\n        transactionTable.autosizeColumnsOnInitialization();\r\n\r\n        When.onChanged(transactionTable.currentPageProperty())\r\n                .then((oldValue, newValue) -> transactionTable.autosizeColumns())\r\n                .listen();\r\n    }\r\n\r\n\r\n    private void setupTransactionTable() {\r\n        MFXTableColumn<Transaction> idCol = new MFXTableColumn<>(\"ID\", false, Comparator.comparing(Transaction::getTransactionID));\r\n        MFXTableColumn<Transaction> nameCol = new MFXTableColumn<>(\"Name\", true, Comparator.comparing(Transaction::getName));\r\n        MFXTableColumn<Transaction> amountCol = new MFXTableColumn<>(\"Amount\", false, Comparator.comparing(Transaction::getAmount));\r\n        MFXTableColumn<Transaction> descriptionCol = new MFXTableColumn<>(\"Description\", true, Comparator.comparing(Transaction::getDescription));\r\n        MFXTableColumn<Transaction> typeCol = new MFXTableColumn<>(\"Type\", false, Comparator.comparing(Transaction::getCategory));\r\n        MFXTableColumn<Transaction> bankCol = new MFXTableColumn<>(\"Bank\", false, Comparator.comparing(Transaction::getBankName));\r\n        MFXTableColumn<Transaction> dateCol = new MFXTableColumn<>(\"Date\", false, Comparator.comparing(Transaction::getDate, new LocalDateComparator()));\r\n        MFXTableColumn<Transaction> actionCol = new MFXTableColumn<>(\"Actions\");\r\n        idCol.setRowCellFactory(transaction -> new MFXTableRowCell<>(Transaction::getTransactionID));\r\n        nameCol.setRowCellFactory(transaction -> new MFXTableRowCell<>(Transaction::getName));\r\n        amountCol.setRowCellFactory(transaction -> new MFXTableRowCell<>(Transaction::getAmount));\r\n        descriptionCol.setRowCellFactory(transaction -> new MFXTableRowCell<>(Transaction::getDescription));\r\n        typeCol.setRowCellFactory(transaction -> new MFXTableRowCell<>(Transaction::getCategory));\r\n        bankCol.setRowCellFactory(transaction -> new MFXTableRowCell<>(Transaction::getBankName));\r\n        dateCol.setRowCellFactory(transaction -> new MFXTableRowCell<>(Transaction::getDate));\r\n        actionCol.setRowCellFactory(transaction -> {\r\n            HBox buttonContainer = createButtonContainer(transaction); // Pass the transaction here\r\n\r\n            MFXTableRowCell<Transaction, HBox> cell = new MFXTableRowCell<>(value -> buttonContainer, value -> \"\");\r\n            cell.setGraphic(buttonContainer);\r\n            return cell;\r\n        });\r\n\r\n        transactionTable.getTableColumns().addAll(idCol,nameCol, amountCol, descriptionCol, typeCol, bankCol, dateCol, actionCol);\r\n        transactionTable.getFilters().addAll(\r\n\r\n                new StringFilter<>(\"Name\", Transaction::getName),\r\n                new DoubleFilter<>(\"Amount\", Transaction::getAmount),\r\n                new StringFilter<>(\"Description\", Transaction::getDescription),\r\n                new StringFilter<>(\"Category\", Transaction::getCategory),\r\n                new StringFilter<>(\"Bank\", Transaction::getBankName)\r\n                );\r\n\r\n//        transactionTable.setItems(transactionData);\r\n        transactionTable.autosizeColumnsOnInitialization();\r\n//        transactionTable.setItems(filteredTransactions);\r\n    }\r\n\r\n    private void loadTransactions() {\r\n        // Clear existing data to avoid duplicates\r\n        transactionData.clear();\r\n\r\n        // Database query\r\n        String query = \"SELECT t.transactionID, t.name, t.amount, t.description, t.category, COALESCE(b.bankName, 'Cash') AS bankName, t.transactionDate \" +\r\n                \"FROM transaction t \" +\r\n                \"LEFT JOIN bank b ON t.bankID = b.bankID \" +\r\n                \"WHERE t.userID = ? \" +\r\n                \"ORDER BY t.transactionDate DESC\";\r\n\r\n        try (Connection conn = ConnectionManager.getConnection();\r\n             PreparedStatement stmt = conn.prepareStatement(query)) {\r\n\r\n            // Set the user ID\r\n            stmt.setInt(1, Main.getUserId());\r\n\r\n            try (ResultSet rs = stmt.executeQuery()) {\r\n                while (rs.next()) {\r\n                    int transactionId = rs.getInt(\"transactionID\");\r\n                    String name = rs.getString(\"name\");\r\n                    double amount = rs.getDouble(\"amount\");\r\n                    String description = rs.getString(\"description\");\r\n                    String category = rs.getString(\"category\");\r\n                    String bankName = rs.getString(\"bankName\");\r\n                    LocalDate date = rs.getDate(\"transactionDate\").toLocalDate();\r\n\r\n                    // Create and add transaction to the list\r\n                    Transaction transaction = new Transaction(transactionId, name, amount, description, category, bankName, date);\r\n                    transactionData.add(transaction);\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace(); // Log the exception\r\n        }\r\n\r\n        System.out.println(\"Transactions loaded: \" + transactionData.size());\r\n\r\n        Platform.runLater(() -> {\r\n            transactionTable.setItems(FXCollections.observableArrayList(transactionData));\r\n        });\r\n    }\r\n\r\n    private void setupSearchBar() {\r\n        searchBar.textProperty().addListener((observable, oldValue, newValue) -> {\r\n            System.out.println(\"Search text: \" + newValue);\r\n            filterTransactions(newValue.trim());\r\n        });\r\n    }\r\n\r\n\r\n    private void filterTransactions(String searchText) {\r\n        if (searchText == null || searchText.isEmpty()) {\r\n            filteredTransactions.setPredicate(null);\r\n        } else {\r\n            filteredTransactions.setPredicate(transaction ->\r\n                    transaction.getName().toLowerCase().contains(searchText.toLowerCase())\r\n            );\r\n\r\n            // Update the TableView with the filtered data\r\n        }\r\n        transactionTable.setItems(FXCollections.observableArrayList(filteredTransactions));\r\n    }\r\n\r\n\r\n\r\n    private void updateTotals() {\r\n        double totalFoodAmount = calculateTotalForCategory(\"Food\");\r\n        double totalEntertainmentAmount = calculateTotalForCategory(\"Entertainment\");\r\n        double totalMiscAmount = calculateTotalForCategory(\"Miscellaneous\");\r\n\r\n        totalFood.setText(String.format(\"Total: $%.2f\", totalFoodAmount));\r\n        totalEntertainment.setText(String.format(\"Total: $%.2f\", totalEntertainmentAmount));\r\n        totalMisc.setText(String.format(\"Total: $%.2f\", totalMiscAmount));\r\n    }\r\n\r\n    private double calculateTotalForCategory(String category) {\r\n        double total = transactionData.stream()\r\n                .filter(tr -> tr.getCategory().equals(category))\r\n                .mapToDouble(Transaction::getAmount)\r\n                .sum();\r\n\r\n        return total;\r\n    }\r\n\r\n    public void handleAddForm(ActionEvent actionEvent) {\r\n        if (!mainPane.getChildren().contains(addForm)) {\r\n            AnchorPane.setTopAnchor(addForm, (mainPane.getHeight() - addForm.getPrefHeight()) / 2);\r\n            AnchorPane.setLeftAnchor(addForm, (mainPane.getWidth() - addForm.getPrefWidth()) / 2);\r\n\r\n            mainPane.getChildren().add(addForm);\r\n            draggable.makeDraggable(addForm);\r\n        }\r\n    }\r\n\r\n    private HBox createButtonContainer(Transaction transaction) {\r\n        HBox buttonContainer = new HBox();\r\n        MFXButton updateButton = createButton(\"Update\", \"updateButton\");\r\n        MFXButton deleteButton = createButton(\"Delete\", \"deleteButton\");\r\n\r\n        updateButton.setOnAction(actionEvent -> updateTransaction(transaction));\r\n        deleteButton.setOnAction(actionEvent -> deleteTransaction(transaction));\r\n\r\n        buttonContainer.getChildren().addAll(updateButton, deleteButton);\r\n        buttonContainer.setAlignment(Pos.CENTER);\r\n        buttonContainer.setSpacing(20);\r\n\r\n        return buttonContainer;\r\n    }\r\n\r\n\r\n    // Method to update a transaction in the database\r\n    private void updateTransactionInDatabase(Transaction transaction) {\r\n        // Assuming you have a method to get bank ID from bank name\r\n        int bankId = getBankIdByName(transaction.getBankName());\r\n\r\n        String sql = \"UPDATE transaction SET name = ?, amount = ?, description = ?, category = ?, bankID = ?, transactionDate = ? WHERE transactionID = ?\";\r\n\r\n        try (Connection conn = ConnectionManager.getConnection();\r\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\r\n\r\n            stmt.setString(1, transaction.getName());\r\n            stmt.setDouble(2, transaction.getAmount() + 100);\r\n            stmt.setString(3, transaction.getDescription());\r\n            stmt.setString(4, transaction.getCategory());\r\n            stmt.setInt(5, bankId);\r\n            stmt.setDate(6, Date.valueOf(transaction.getDate()));\r\n            stmt.setInt(7, transaction.getTransactionID());\r\n\r\n            stmt.executeUpdate();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    private int getBankIdByName(String bankName) {\r\n        String query = \"SELECT bankID FROM bank WHERE bankName = ?\";\r\n        try (Connection conn = ConnectionManager.getConnection();\r\n             PreparedStatement pstmt = conn.prepareStatement(query)) {\r\n\r\n            pstmt.setString(1, bankName);\r\n            try (ResultSet rs = pstmt.executeQuery()) {\r\n                if (rs.next()) {\r\n                    return rs.getInt(\"bankID\");\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private void deleteTransactionFromDatabase(Transaction transaction) {\r\n        String sql = \"DELETE FROM transaction WHERE transactionID = ?\";\r\n        try (Connection conn = ConnectionManager.getConnection();\r\n             PreparedStatement pstmt = conn.prepareStatement(sql)) {\r\n\r\n            pstmt.setInt(1, transaction.getTransactionID());\r\n            int affectedRows = pstmt.executeUpdate();\r\n            System.out.println(\"Deleted rows: \" + affectedRows);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void updateTransaction(Transaction transaction) {\r\n        Platform.runLater(() -> {\r\n            // get the selected transaction\r\n           Transaction selectedTransaction = transactionTable.getSelectionModel().getSelectedValues().getFirst();\r\n           // show the form\r\n           if (!mainPane.getChildren().contains(updateForm)) {\r\n               updateForm = new UpdateTransactionForm(selectedTransaction);\r\n               AnchorPane.setTopAnchor(updateForm, (mainPane.getHeight() - updateForm.getPrefHeight()) / 2);\r\n               AnchorPane.setLeftAnchor(updateForm, (mainPane.getWidth() - updateForm.getPrefWidth()) / 2);\r\n               mainPane.getChildren().add(updateForm);\r\n               draggable.makeDraggable(updateForm);\r\n           }\r\n        });\r\n\r\n    }\r\n\r\n    private void deleteTransaction(Transaction transaction) {\r\n        ManualAlert confirm = new ManualAlert(Alert.AlertType.CONFIRMATION, \"Confirm Deletion\",\r\n                \"Are you sure you want to delete this budget?\",\r\n                \"This action cannot be revert!\");\r\n        confirm.showAndWait().ifPresent(response -> {\r\n            if (response == ButtonType.YES) {\r\n                deleteTransactionFromDatabase(transaction);\r\n                loadTransactions();\r\n            }\r\n        });\r\n    }\r\n\r\n    private MFXButton createButton(String text, String id) {\r\n        MFXButton button = new MFXButton(text);\r\n        button.setOnAction(actionEvent -> {});\r\n        button.setId(id);\r\n        return button;\r\n    }\r\n\r\n    public void handleAddTransactionForm(ActionEvent actionEvent) {\r\n        if (!mainPane.getChildren().contains(addForm)) {\r\n            addForm = new AddTransactionForm();\r\n            AnchorPane.setTopAnchor(addForm, (mainPane.getHeight() - addForm.getPrefHeight()) / 2);\r\n            AnchorPane.setLeftAnchor(addForm, (mainPane.getWidth() - addForm.getPrefWidth()) / 2);\r\n\r\n            mainPane.getChildren().add(addForm);\r\n            draggable.makeDraggable(addForm);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/myApp/controllers/views/TransactionController.java b/src/main/java/myApp/controllers/views/TransactionController.java
--- a/src/main/java/myApp/controllers/views/TransactionController.java	
+++ b/src/main/java/myApp/controllers/views/TransactionController.java	
@@ -270,15 +270,15 @@
     private void updateTransaction(Transaction transaction) {
         Platform.runLater(() -> {
             // get the selected transaction
-           Transaction selectedTransaction = transactionTable.getSelectionModel().getSelectedValues().getFirst();
-           // show the form
-           if (!mainPane.getChildren().contains(updateForm)) {
-               updateForm = new UpdateTransactionForm(selectedTransaction);
-               AnchorPane.setTopAnchor(updateForm, (mainPane.getHeight() - updateForm.getPrefHeight()) / 2);
-               AnchorPane.setLeftAnchor(updateForm, (mainPane.getWidth() - updateForm.getPrefWidth()) / 2);
-               mainPane.getChildren().add(updateForm);
-               draggable.makeDraggable(updateForm);
-           }
+            Transaction selectedTransaction = transactionTable.getSelectionModel().getSelectedValues().getFirst();
+            // show the form
+            if (!mainPane.getChildren().contains(updateForm)) {
+                updateForm = new UpdateTransactionForm(selectedTransaction);
+                AnchorPane.setTopAnchor(updateForm, (mainPane.getHeight() - updateForm.getPrefHeight()) / 2);
+                AnchorPane.setLeftAnchor(updateForm, (mainPane.getWidth() - updateForm.getPrefWidth()) / 2);
+                mainPane.getChildren().add(updateForm);
+                draggable.makeDraggable(updateForm);
+            }
         });
 
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2dbfccdd-421e-4d19-8b56-15a164be3be8\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/components/UpdateTransactionForm.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/components/updateTransactionForm.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/components/AddTransactionForm.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/components/AddTransactionForm.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/components/BudgetBox.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/components/BudgetBox.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/views/MenuBarController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/views/MenuBarController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/views/TransactionController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/myApp/controllers/views/TransactionController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/myApp/utils/MainAppManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/myApp/utils/MainAppManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/views/testTransaction.fxml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/views/transaction.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/views/transaction.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/myApp/controllers/components/AddTransactionForm.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/myApp/controllers/components/AddTransactionForm.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/myApp/controllers/components/BudgetBox.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/myApp/controllers/components/BudgetBox.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/myApp/controllers/views/MenuBarController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/myApp/controllers/views/MenuBarController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/myApp/controllers/views/TransactionController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/myApp/controllers/views/TransactionController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/myApp/utils/MainAppManager.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/myApp/utils/MainAppManager.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/views/testTransaction.fxml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/views/transaction.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/views/transaction.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"CSS File\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"ND\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SWAP_SIDES_IN_COMPARE_BRANCHES\" value=\"true\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;vinhnt2914&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"e93a114d-d2e9-4637-9ed6-a073c8ebe091\" />\r\n        <option name=\"url\" value=\"https://github.com/vinhnt2914/BITS_Group12.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2YwGM0QGNhwii7T4OVVmdzh4NVm\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;true&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowPanel.toolwindow.highlight.mappings&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowPanel.toolwindow.highlight.symlinks&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowPanel.toolwindow.show.date&quot;: &quot;false&quot;,\r\n    &quot;WebServerToolWindowPanel.toolwindow.show.permissions&quot;: &quot;false&quot;,\r\n    &quot;WebServerToolWindowPanel.toolwindow.show.size&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;NguyenTheVinh&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/vinhh/Documents/GitHub/BITS_Group12/src/main/resources/images/gif&quot;,\r\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.5443038&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\vinhh\\Documents\\GitHub\\BITS_Group12\\src\\main\\resources\\images\\gif\" />\r\n      <recent name=\"C:\\Users\\vinhh\\Documents\\GitHub\\BITS_Group12\\src\\main\\resources\\images\\alert\" />\r\n      <recent name=\"C:\\Users\\vinhh\\Documents\\GitHub\\BITS_Group12\\src\\main\\resources\\images\\budget\" />\r\n      <recent name=\"C:\\Users\\vinhh\\Documents\\GitHub\\BITS_Group12\\src\\main\\resources\\images\" />\r\n      <recent name=\"C:\\Users\\vinhh\\Documents\\GitHub\\BITS_Group12\\src\\main\\resources\\images\\account\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\vinhh\\Documents\\GitHub\\BITS_Group12\\src\\main\\resources\\images\\gif\" />\r\n      <recent name=\"C:\\Users\\vinhh\\Documents\\GitHub\\BITS_Group12\\src\\main\\resources\\images\\finance\" />\r\n      <recent name=\"C:\\Users\\vinhh\\Documents\\GitHub\\BITS_Group12\\src\\main\\resources\\images\\exitButton\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"myApp.Main\" />\r\n      <module name=\"BITS_GROUP12\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path C:\\Users\\vinhh\\JavaFX\\javafx-sdk-21.0.1\\lib --add-modules javafx.controls,javafx.fxml\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2dbfccdd-421e-4d19-8b56-15a164be3be8\" name=\"Changes\" comment=\"\" />\r\n      <created>1701429178984</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1701429178984</updated>\r\n      <workItem from=\"1701429182091\" duration=\"84000\" />\r\n      <workItem from=\"1701429482743\" duration=\"1004000\" />\r\n      <workItem from=\"1701479444601\" duration=\"85000\" />\r\n      <workItem from=\"1701479956038\" duration=\"3000\" />\r\n      <workItem from=\"1701480001559\" duration=\"877000\" />\r\n      <workItem from=\"1701480899183\" duration=\"1864000\" />\r\n      <workItem from=\"1701489138636\" duration=\"4174000\" />\r\n      <workItem from=\"1701505062475\" duration=\"1412000\" />\r\n      <workItem from=\"1701524936073\" duration=\"3976000\" />\r\n      <workItem from=\"1701590706185\" duration=\"3660000\" />\r\n      <workItem from=\"1701677142013\" duration=\"6031000\" />\r\n      <workItem from=\"1701698435529\" duration=\"3018000\" />\r\n      <workItem from=\"1701737408357\" duration=\"3646000\" />\r\n      <workItem from=\"1701747956692\" duration=\"1207000\" />\r\n      <workItem from=\"1701749548175\" duration=\"2710000\" />\r\n      <workItem from=\"1701772173604\" duration=\"1348000\" />\r\n      <workItem from=\"1701870323343\" duration=\"133000\" />\r\n      <workItem from=\"1701871316740\" duration=\"4196000\" />\r\n      <workItem from=\"1701932065257\" duration=\"7035000\" />\r\n      <workItem from=\"1701957332179\" duration=\"4137000\" />\r\n      <workItem from=\"1701998885813\" duration=\"4399000\" />\r\n      <workItem from=\"1702024259172\" duration=\"8229000\" />\r\n      <workItem from=\"1702044694972\" duration=\"3362000\" />\r\n      <workItem from=\"1702131144723\" duration=\"6822000\" />\r\n      <workItem from=\"1702174515186\" duration=\"7603000\" />\r\n      <workItem from=\"1702192096546\" duration=\"8059000\" />\r\n      <workItem from=\"1702430379869\" duration=\"5371000\" />\r\n      <workItem from=\"1702516258444\" duration=\"8491000\" />\r\n      <workItem from=\"1702709512936\" duration=\"19113000\" />\r\n      <workItem from=\"1702778708601\" duration=\"6885000\" />\r\n      <workItem from=\"1702803039931\" duration=\"590000\" />\r\n      <workItem from=\"1702805934035\" duration=\"4284000\" />\r\n      <workItem from=\"1702871225128\" duration=\"3059000\" />\r\n      <workItem from=\"1702887818872\" duration=\"4470000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/ND\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,23 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="2dbfccdd-421e-4d19-8b56-15a164be3be8" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/src/main/java/myApp/controllers/components/UpdateTransactionForm.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/components/updateTransactionForm.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/myApp/controllers/components/AddTransactionForm.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/myApp/controllers/components/AddTransactionForm.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/myApp/controllers/components/BudgetBox.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/myApp/controllers/components/BudgetBox.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/myApp/controllers/views/MenuBarController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/myApp/controllers/views/MenuBarController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/myApp/controllers/views/TransactionController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/myApp/controllers/views/TransactionController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/myApp/utils/MainAppManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/myApp/utils/MainAppManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/views/testTransaction.fxml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/views/transaction.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/views/transaction.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/myApp/controllers/components/AddTransactionForm.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/myApp/controllers/components/AddTransactionForm.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/myApp/controllers/components/BudgetBox.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/myApp/controllers/components/BudgetBox.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/myApp/controllers/views/MenuBarController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/myApp/controllers/views/MenuBarController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/myApp/controllers/views/TransactionController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/myApp/controllers/views/TransactionController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/myApp/utils/MainAppManager.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/myApp/utils/MainAppManager.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/views/testTransaction.fxml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/views/transaction.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/views/transaction.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -73,35 +57,35 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;true&quot;,
-    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowPanel.toolwindow.highlight.mappings&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowPanel.toolwindow.highlight.symlinks&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowPanel.toolwindow.show.date&quot;: &quot;false&quot;,
-    &quot;WebServerToolWindowPanel.toolwindow.show.permissions&quot;: &quot;false&quot;,
-    &quot;WebServerToolWindowPanel.toolwindow.show.size&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;NguyenTheVinh&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/vinhh/Documents/GitHub/BITS_Group12/src/main/resources/images/gif&quot;,
-    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.5443038&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Downloaded.Files.Path.Enabled": "true",
+    "Repository.Attach.Annotations": "false",
+    "Repository.Attach.JavaDocs": "false",
+    "Repository.Attach.Sources": "false",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "true",
+    "WebServerToolWindowPanel.toolwindow.highlight.mappings": "true",
+    "WebServerToolWindowPanel.toolwindow.highlight.symlinks": "true",
+    "WebServerToolWindowPanel.toolwindow.show.date": "false",
+    "WebServerToolWindowPanel.toolwindow.show.permissions": "false",
+    "WebServerToolWindowPanel.toolwindow.show.size": "false",
+    "git-widget-placeholder": "Vinh01",
+    "last_opened_file_path": "C:/Users/vinhh/Documents/GitHub/BITS_Group12/src/main/resources/images/gif",
+    "list.type.of.created.stylesheet": "CSS",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "project.structure.last.edited": "Libraries",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.5443038",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\vinhh\Documents\GitHub\BITS_Group12\src\main\resources\images\gif" />
